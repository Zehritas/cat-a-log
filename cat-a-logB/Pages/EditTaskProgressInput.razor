@using cat_a_logB.Data
@inject cat_a_logB.Data.TaskManager TaskManager
<form>
    <div class="form-group">
        <label for="progressInput">Select Progress:</label>
        <select class="form-control" id="progressInput" @bind="newProgress">
            @foreach (var progressOption in progressOptions)
            {
                <option value="@progressOption">@progressOption%</option>
            }
        </select>
    </div>
    <button type="button" class="btn btn-success" @onclick="() => UpdateProgress(newProgress)">Update Progress</button>
</form>

@code {
    [Parameter] public SelectedData<TaskData> selectedData { get; set; }
    [Parameter] public List<TaskData> project { get; set; }
    [Parameter] public ApexChart<TaskData> chart { get; set; }
    [Parameter] public ApexChart<ProjectMilestone> mileChart { get; set; }
    [Parameter] public List<ProjectMilestone> milestones { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private int newProgress = 0;
    private List<int> progressOptions = new List<int> { 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80,
   85, 90, 95, 100 };

    private async Task UpdateProgress(int progressValue)
    {
        await TaskManager.EditTaskProgress(mileChart, project, chart, selectedData, OnClose, milestones, progressValue);
        await chart.UpdateSeriesAsync();
        StateHasChanged();
    }
}