@page "/";
@using cat_a_logB;
@using ApexCharts;

<PageTitle>Gantt Chart</PageTitle>

<DemoContainer>

    @if (project == null)
    {
        <div class="text-center text-muted" style="min-height: 300px">
            <h3>Loading chart<span class="animated-dots"></span></h3>
        </div>
    }
    else
    {
        <ApexChart OnClick=OnClick @ref=chart TItem="GanttData" Title="Projects" Options="options" XAxisType="XAxisType.Datetime">
            <ApexRangeSeries TItem="GanttData" Items="project" XValue="@(e => e.Name)"
                YMinValue="@(e => e.StartDate.ToUnixTimeMilliseconds())"
                YMaxValue="@(e => e.EndDate.ToUnixTimeMilliseconds())" />
        </ApexChart>
    }

</DemoContainer>

@if (selectedData != null && selectedData.DataPoint != null)
{
    <Alert>
        <h3>You clicked @selectedData.DataPoint.X</h3>
    </Alert>
}
else if (selectedData != null)
{
    <Alert>
        <h3>You clicked the chart but not a data point</h3>
    </Alert>
}

<form>
    <div class="form-group">
        <label for="taskName">Task Name:</label>
        <input class="form-control" type="text" id="taskName" @bind="newTask.Name" />
    </div>

    <div class="form-group">
        <label for="startDate">Start Date:</label>
        <input class="form-control" type="date" id="startDate" @bind="newTask.StartDate" />
    </div>

    <div class="form-group">
        <label for="endDate">End Date:</label>
        <input class="form-control" type="date" id="endDate" @bind="newTask.EndDate" />
    </div>

    <button class="btn btn-primary" type="button" @onclick="AddTask">Add Task</button>
</form>

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger mt-2">@errorMessage</div>
}

@code {
    private string errorMessage = "";
    private ApexChart<GanttData> chart;
    private GanttData newTask = new GanttData();
    private List<GanttData> project;
    private ApexChartOptions<GanttData> options;

    private SelectedData<GanttData> selectedData;

    protected override async Task OnInitializedAsync()
    {
        options = new ApexChartOptions<GanttData>
        {
            PlotOptions = new PlotOptions
            {
                Bar = new PlotOptionsBar
                {
                    Horizontal = true
                }
            },
            Tooltip = new ApexCharts.Tooltip
            {
                X = new TooltipX
                {
                    Format = "dd MMM yyyy HH:mm",
                }
            }
        };
        project = SampleData.GetProject();
    }

    private async Task AddTask()
    {
        if (string.IsNullOrWhiteSpace(newTask.Name))
        {
            errorMessage = "Task name is required.";
            return;
        }

        if (newTask.StartDate >= newTask.EndDate)
        {
            errorMessage = "End date must be greater than start date.";
            return;
        }

        errorMessage = "";

        var newTaskData = new GanttData
        {
            Name = newTask.Name,
            StartDate = newTask.StartDate,
            EndDate = newTask.EndDate
        };

        project.Add(newTaskData);

        await chart.UpdateSeriesAsync();
        StateHasChanged();
    }

    private void OnClick(SelectedData<GanttData> data)
    {
        selectedData = data;
    }
}